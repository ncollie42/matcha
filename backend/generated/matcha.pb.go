// Code generated by protoc-gen-go. DO NOT EDIT.
// source: matcha.proto

package matcha

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ResetPassRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	NewPass              string   `protobuf:"bytes,2,opt,name=newPass,proto3" json:"newPass,omitempty"`
	Hash                 string   `protobuf:"bytes,3,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ResetPassRequest) Reset()         { *m = ResetPassRequest{} }
func (m *ResetPassRequest) String() string { return proto.CompactTextString(m) }
func (*ResetPassRequest) ProtoMessage()    {}
func (*ResetPassRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb514d74c502fc4f, []int{0}
}

func (m *ResetPassRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ResetPassRequest.Unmarshal(m, b)
}
func (m *ResetPassRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ResetPassRequest.Marshal(b, m, deterministic)
}
func (m *ResetPassRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ResetPassRequest.Merge(m, src)
}
func (m *ResetPassRequest) XXX_Size() int {
	return xxx_messageInfo_ResetPassRequest.Size(m)
}
func (m *ResetPassRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ResetPassRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ResetPassRequest proto.InternalMessageInfo

func (m *ResetPassRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *ResetPassRequest) GetNewPass() string {
	if m != nil {
		return m.NewPass
	}
	return ""
}

func (m *ResetPassRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type SendEmailRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SendEmailRequest) Reset()         { *m = SendEmailRequest{} }
func (m *SendEmailRequest) String() string { return proto.CompactTextString(m) }
func (*SendEmailRequest) ProtoMessage()    {}
func (*SendEmailRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb514d74c502fc4f, []int{1}
}

func (m *SendEmailRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SendEmailRequest.Unmarshal(m, b)
}
func (m *SendEmailRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SendEmailRequest.Marshal(b, m, deterministic)
}
func (m *SendEmailRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SendEmailRequest.Merge(m, src)
}
func (m *SendEmailRequest) XXX_Size() int {
	return xxx_messageInfo_SendEmailRequest.Size(m)
}
func (m *SendEmailRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SendEmailRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SendEmailRequest proto.InternalMessageInfo

func (m *SendEmailRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type CreateRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	FirstName            string   `protobuf:"bytes,2,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName             string   `protobuf:"bytes,3,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Password             string   `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Email                string   `protobuf:"bytes,5,opt,name=email,proto3" json:"email,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CreateRequest) Reset()         { *m = CreateRequest{} }
func (m *CreateRequest) String() string { return proto.CompactTextString(m) }
func (*CreateRequest) ProtoMessage()    {}
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb514d74c502fc4f, []int{2}
}

func (m *CreateRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CreateRequest.Unmarshal(m, b)
}
func (m *CreateRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CreateRequest.Marshal(b, m, deterministic)
}
func (m *CreateRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CreateRequest.Merge(m, src)
}
func (m *CreateRequest) XXX_Size() int {
	return xxx_messageInfo_CreateRequest.Size(m)
}
func (m *CreateRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_CreateRequest.DiscardUnknown(m)
}

var xxx_messageInfo_CreateRequest proto.InternalMessageInfo

func (m *CreateRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *CreateRequest) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *CreateRequest) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *CreateRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *CreateRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

type VerifyRequest struct {
	Email                string   `protobuf:"bytes,1,opt,name=email,proto3" json:"email,omitempty"`
	Hash                 string   `protobuf:"bytes,2,opt,name=hash,proto3" json:"hash,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VerifyRequest) Reset()         { *m = VerifyRequest{} }
func (m *VerifyRequest) String() string { return proto.CompactTextString(m) }
func (*VerifyRequest) ProtoMessage()    {}
func (*VerifyRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb514d74c502fc4f, []int{3}
}

func (m *VerifyRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VerifyRequest.Unmarshal(m, b)
}
func (m *VerifyRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VerifyRequest.Marshal(b, m, deterministic)
}
func (m *VerifyRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VerifyRequest.Merge(m, src)
}
func (m *VerifyRequest) XXX_Size() int {
	return xxx_messageInfo_VerifyRequest.Size(m)
}
func (m *VerifyRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_VerifyRequest.DiscardUnknown(m)
}

var xxx_messageInfo_VerifyRequest proto.InternalMessageInfo

func (m *VerifyRequest) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *VerifyRequest) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

type BrowseRequest struct {
	Location             string   `protobuf:"bytes,1,opt,name=location,proto3" json:"location,omitempty"`
	MinAge               int32    `protobuf:"varint,2,opt,name=minAge,proto3" json:"minAge,omitempty"`
	MaxAge               int32    `protobuf:"varint,3,opt,name=MaxAge,proto3" json:"MaxAge,omitempty"`
	Tags                 []string `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`
	MinFameRating        int32    `protobuf:"varint,5,opt,name=minFameRating,proto3" json:"minFameRating,omitempty"`
	MaxFameRating        int32    `protobuf:"varint,6,opt,name=MaxFameRating,proto3" json:"MaxFameRating,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *BrowseRequest) Reset()         { *m = BrowseRequest{} }
func (m *BrowseRequest) String() string { return proto.CompactTextString(m) }
func (*BrowseRequest) ProtoMessage()    {}
func (*BrowseRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb514d74c502fc4f, []int{4}
}

func (m *BrowseRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_BrowseRequest.Unmarshal(m, b)
}
func (m *BrowseRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_BrowseRequest.Marshal(b, m, deterministic)
}
func (m *BrowseRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_BrowseRequest.Merge(m, src)
}
func (m *BrowseRequest) XXX_Size() int {
	return xxx_messageInfo_BrowseRequest.Size(m)
}
func (m *BrowseRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_BrowseRequest.DiscardUnknown(m)
}

var xxx_messageInfo_BrowseRequest proto.InternalMessageInfo

func (m *BrowseRequest) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *BrowseRequest) GetMinAge() int32 {
	if m != nil {
		return m.MinAge
	}
	return 0
}

func (m *BrowseRequest) GetMaxAge() int32 {
	if m != nil {
		return m.MaxAge
	}
	return 0
}

func (m *BrowseRequest) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *BrowseRequest) GetMinFameRating() int32 {
	if m != nil {
		return m.MinFameRating
	}
	return 0
}

func (m *BrowseRequest) GetMaxFameRating() int32 {
	if m != nil {
		return m.MaxFameRating
	}
	return 0
}

type LikedStatus struct {
	BothLiked            bool     `protobuf:"varint,1,opt,name=bothLiked,proto3" json:"bothLiked,omitempty"`
	ILiked               bool     `protobuf:"varint,2,opt,name=ILiked,proto3" json:"ILiked,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LikedStatus) Reset()         { *m = LikedStatus{} }
func (m *LikedStatus) String() string { return proto.CompactTextString(m) }
func (*LikedStatus) ProtoMessage()    {}
func (*LikedStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb514d74c502fc4f, []int{5}
}

func (m *LikedStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LikedStatus.Unmarshal(m, b)
}
func (m *LikedStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LikedStatus.Marshal(b, m, deterministic)
}
func (m *LikedStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LikedStatus.Merge(m, src)
}
func (m *LikedStatus) XXX_Size() int {
	return xxx_messageInfo_LikedStatus.Size(m)
}
func (m *LikedStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_LikedStatus.DiscardUnknown(m)
}

var xxx_messageInfo_LikedStatus proto.InternalMessageInfo

func (m *LikedStatus) GetBothLiked() bool {
	if m != nil {
		return m.BothLiked
	}
	return false
}

func (m *LikedStatus) GetILiked() bool {
	if m != nil {
		return m.ILiked
	}
	return false
}

type Testing struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Arg1                 string   `protobuf:"bytes,2,opt,name=arg1,proto3" json:"arg1,omitempty"`
	Arg2                 string   `protobuf:"bytes,3,opt,name=arg2,proto3" json:"arg2,omitempty"`
	Arg3                 string   `protobuf:"bytes,4,opt,name=arg3,proto3" json:"arg3,omitempty"`
	Arg4                 string   `protobuf:"bytes,5,opt,name=arg4,proto3" json:"arg4,omitempty"`
	Arg5                 string   `protobuf:"bytes,6,opt,name=arg5,proto3" json:"arg5,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Testing) Reset()         { *m = Testing{} }
func (m *Testing) String() string { return proto.CompactTextString(m) }
func (*Testing) ProtoMessage()    {}
func (*Testing) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb514d74c502fc4f, []int{6}
}

func (m *Testing) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Testing.Unmarshal(m, b)
}
func (m *Testing) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Testing.Marshal(b, m, deterministic)
}
func (m *Testing) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Testing.Merge(m, src)
}
func (m *Testing) XXX_Size() int {
	return xxx_messageInfo_Testing.Size(m)
}
func (m *Testing) XXX_DiscardUnknown() {
	xxx_messageInfo_Testing.DiscardUnknown(m)
}

var xxx_messageInfo_Testing proto.InternalMessageInfo

func (m *Testing) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func (m *Testing) GetArg1() string {
	if m != nil {
		return m.Arg1
	}
	return ""
}

func (m *Testing) GetArg2() string {
	if m != nil {
		return m.Arg2
	}
	return ""
}

func (m *Testing) GetArg3() string {
	if m != nil {
		return m.Arg3
	}
	return ""
}

func (m *Testing) GetArg4() string {
	if m != nil {
		return m.Arg4
	}
	return ""
}

func (m *Testing) GetArg5() string {
	if m != nil {
		return m.Arg5
	}
	return ""
}

type ImageRequest struct {
	UserID               int64    `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	Count                int32    `protobuf:"varint,2,opt,name=count,proto3" json:"count,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageRequest) Reset()         { *m = ImageRequest{} }
func (m *ImageRequest) String() string { return proto.CompactTextString(m) }
func (*ImageRequest) ProtoMessage()    {}
func (*ImageRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb514d74c502fc4f, []int{7}
}

func (m *ImageRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageRequest.Unmarshal(m, b)
}
func (m *ImageRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageRequest.Marshal(b, m, deterministic)
}
func (m *ImageRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageRequest.Merge(m, src)
}
func (m *ImageRequest) XXX_Size() int {
	return xxx_messageInfo_ImageRequest.Size(m)
}
func (m *ImageRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ImageRequest proto.InternalMessageInfo

func (m *ImageRequest) GetUserID() int64 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *ImageRequest) GetCount() int32 {
	if m != nil {
		return m.Count
	}
	return 0
}

type ImageData struct {
	Image                []byte   `protobuf:"bytes,1,opt,name=image,proto3" json:"image,omitempty"`
	Index                int32    `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ImageData) Reset()         { *m = ImageData{} }
func (m *ImageData) String() string { return proto.CompactTextString(m) }
func (*ImageData) ProtoMessage()    {}
func (*ImageData) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb514d74c502fc4f, []int{8}
}

func (m *ImageData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ImageData.Unmarshal(m, b)
}
func (m *ImageData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ImageData.Marshal(b, m, deterministic)
}
func (m *ImageData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ImageData.Merge(m, src)
}
func (m *ImageData) XXX_Size() int {
	return xxx_messageInfo_ImageData.Size(m)
}
func (m *ImageData) XXX_DiscardUnknown() {
	xxx_messageInfo_ImageData.DiscardUnknown(m)
}

var xxx_messageInfo_ImageData proto.InternalMessageInfo

func (m *ImageData) GetImage() []byte {
	if m != nil {
		return m.Image
	}
	return nil
}

func (m *ImageData) GetIndex() int32 {
	if m != nil {
		return m.Index
	}
	return 0
}

type Empty struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Empty) Reset()         { *m = Empty{} }
func (m *Empty) String() string { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()    {}
func (*Empty) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb514d74c502fc4f, []int{9}
}

func (m *Empty) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Empty.Unmarshal(m, b)
}
func (m *Empty) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Empty.Marshal(b, m, deterministic)
}
func (m *Empty) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Empty.Merge(m, src)
}
func (m *Empty) XXX_Size() int {
	return xxx_messageInfo_Empty.Size(m)
}
func (m *Empty) XXX_DiscardUnknown() {
	xxx_messageInfo_Empty.DiscardUnknown(m)
}

var xxx_messageInfo_Empty proto.InternalMessageInfo

type LoginRequest struct {
	UserName             string   `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	Password             string   `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *LoginRequest) Reset()         { *m = LoginRequest{} }
func (m *LoginRequest) String() string { return proto.CompactTextString(m) }
func (*LoginRequest) ProtoMessage()    {}
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb514d74c502fc4f, []int{10}
}

func (m *LoginRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_LoginRequest.Unmarshal(m, b)
}
func (m *LoginRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_LoginRequest.Marshal(b, m, deterministic)
}
func (m *LoginRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_LoginRequest.Merge(m, src)
}
func (m *LoginRequest) XXX_Size() int {
	return xxx_messageInfo_LoginRequest.Size(m)
}
func (m *LoginRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_LoginRequest.DiscardUnknown(m)
}

var xxx_messageInfo_LoginRequest proto.InternalMessageInfo

func (m *LoginRequest) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *LoginRequest) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type User struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	UserName             string   `protobuf:"bytes,2,opt,name=userName,proto3" json:"userName,omitempty"`
	FirstName            string   `protobuf:"bytes,3,opt,name=firstName,proto3" json:"firstName,omitempty"`
	LastName             string   `protobuf:"bytes,4,opt,name=lastName,proto3" json:"lastName,omitempty"`
	Password             string   `protobuf:"bytes,5,opt,name=password,proto3" json:"password,omitempty"`
	Email                string   `protobuf:"bytes,6,opt,name=email,proto3" json:"email,omitempty"`
	Gender               string   `protobuf:"bytes,7,opt,name=gender,proto3" json:"gender,omitempty"`
	Preference           string   `protobuf:"bytes,8,opt,name=preference,proto3" json:"preference,omitempty"`
	Bio                  string   `protobuf:"bytes,9,opt,name=bio,proto3" json:"bio,omitempty"`
	Hash                 string   `protobuf:"bytes,10,opt,name=hash,proto3" json:"hash,omitempty"`
	Tags                 []string `protobuf:"bytes,11,rep,name=tags,proto3" json:"tags,omitempty"`
	SeenHistory          []int32  `protobuf:"varint,12,rep,packed,name=seenHistory,proto3" json:"seenHistory,omitempty"`
	FameRating           int32    `protobuf:"varint,13,opt,name=fameRating,proto3" json:"fameRating,omitempty"`
	Age                  int32    `protobuf:"varint,14,opt,name=age,proto3" json:"age,omitempty"`
	Location             string   `protobuf:"bytes,15,opt,name=location,proto3" json:"location,omitempty"`
	Test                 string   `protobuf:"bytes,16,opt,name=test,proto3" json:"test,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb514d74c502fc4f, []int{11}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *User) GetUserName() string {
	if m != nil {
		return m.UserName
	}
	return ""
}

func (m *User) GetFirstName() string {
	if m != nil {
		return m.FirstName
	}
	return ""
}

func (m *User) GetLastName() string {
	if m != nil {
		return m.LastName
	}
	return ""
}

func (m *User) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *User) GetEmail() string {
	if m != nil {
		return m.Email
	}
	return ""
}

func (m *User) GetGender() string {
	if m != nil {
		return m.Gender
	}
	return ""
}

func (m *User) GetPreference() string {
	if m != nil {
		return m.Preference
	}
	return ""
}

func (m *User) GetBio() string {
	if m != nil {
		return m.Bio
	}
	return ""
}

func (m *User) GetHash() string {
	if m != nil {
		return m.Hash
	}
	return ""
}

func (m *User) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

func (m *User) GetSeenHistory() []int32 {
	if m != nil {
		return m.SeenHistory
	}
	return nil
}

func (m *User) GetFameRating() int32 {
	if m != nil {
		return m.FameRating
	}
	return 0
}

func (m *User) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *User) GetLocation() string {
	if m != nil {
		return m.Location
	}
	return ""
}

func (m *User) GetTest() string {
	if m != nil {
		return m.Test
	}
	return ""
}

type UserID struct {
	UserID               int32    `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserID) Reset()         { *m = UserID{} }
func (m *UserID) String() string { return proto.CompactTextString(m) }
func (*UserID) ProtoMessage()    {}
func (*UserID) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb514d74c502fc4f, []int{12}
}

func (m *UserID) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserID.Unmarshal(m, b)
}
func (m *UserID) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserID.Marshal(b, m, deterministic)
}
func (m *UserID) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserID.Merge(m, src)
}
func (m *UserID) XXX_Size() int {
	return xxx_messageInfo_UserID.Size(m)
}
func (m *UserID) XXX_DiscardUnknown() {
	xxx_messageInfo_UserID.DiscardUnknown(m)
}

var xxx_messageInfo_UserID proto.InternalMessageInfo

func (m *UserID) GetUserID() int32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

type Session struct {
	UserID               int32    `protobuf:"varint,1,opt,name=userID,proto3" json:"userID,omitempty"`
	SessionID            string   `protobuf:"bytes,2,opt,name=sessionID,proto3" json:"sessionID,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Session) Reset()         { *m = Session{} }
func (m *Session) String() string { return proto.CompactTextString(m) }
func (*Session) ProtoMessage()    {}
func (*Session) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb514d74c502fc4f, []int{13}
}

func (m *Session) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Session.Unmarshal(m, b)
}
func (m *Session) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Session.Marshal(b, m, deterministic)
}
func (m *Session) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Session.Merge(m, src)
}
func (m *Session) XXX_Size() int {
	return xxx_messageInfo_Session.Size(m)
}
func (m *Session) XXX_DiscardUnknown() {
	xxx_messageInfo_Session.DiscardUnknown(m)
}

var xxx_messageInfo_Session proto.InternalMessageInfo

func (m *Session) GetUserID() int32 {
	if m != nil {
		return m.UserID
	}
	return 0
}

func (m *Session) GetSessionID() string {
	if m != nil {
		return m.SessionID
	}
	return ""
}

type Reply struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Reply) Reset()         { *m = Reply{} }
func (m *Reply) String() string { return proto.CompactTextString(m) }
func (*Reply) ProtoMessage()    {}
func (*Reply) Descriptor() ([]byte, []int) {
	return fileDescriptor_bb514d74c502fc4f, []int{14}
}

func (m *Reply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reply.Unmarshal(m, b)
}
func (m *Reply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reply.Marshal(b, m, deterministic)
}
func (m *Reply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reply.Merge(m, src)
}
func (m *Reply) XXX_Size() int {
	return xxx_messageInfo_Reply.Size(m)
}
func (m *Reply) XXX_DiscardUnknown() {
	xxx_messageInfo_Reply.DiscardUnknown(m)
}

var xxx_messageInfo_Reply proto.InternalMessageInfo

func (m *Reply) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

func init() {
	proto.RegisterType((*ResetPassRequest)(nil), "matcha.resetPassRequest")
	proto.RegisterType((*SendEmailRequest)(nil), "matcha.sendEmailRequest")
	proto.RegisterType((*CreateRequest)(nil), "matcha.createRequest")
	proto.RegisterType((*VerifyRequest)(nil), "matcha.verifyRequest")
	proto.RegisterType((*BrowseRequest)(nil), "matcha.browseRequest")
	proto.RegisterType((*LikedStatus)(nil), "matcha.likedStatus")
	proto.RegisterType((*Testing)(nil), "matcha.testing")
	proto.RegisterType((*ImageRequest)(nil), "matcha.imageRequest")
	proto.RegisterType((*ImageData)(nil), "matcha.imageData")
	proto.RegisterType((*Empty)(nil), "matcha.empty")
	proto.RegisterType((*LoginRequest)(nil), "matcha.loginRequest")
	proto.RegisterType((*User)(nil), "matcha.User")
	proto.RegisterType((*UserID)(nil), "matcha.userID")
	proto.RegisterType((*Session)(nil), "matcha.Session")
	proto.RegisterType((*Reply)(nil), "matcha.Reply")
}

func init() { proto.RegisterFile("matcha.proto", fileDescriptor_bb514d74c502fc4f) }

var fileDescriptor_bb514d74c502fc4f = []byte{
	// 882 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x56, 0x5f, 0x6f, 0xdc, 0x44,
	0x10, 0xd7, 0xfd, 0xb1, 0x9d, 0x9b, 0xdc, 0x5d, 0xc3, 0x52, 0x22, 0xeb, 0x84, 0xd0, 0x61, 0x21,
	0x08, 0x48, 0xa4, 0x25, 0x6d, 0x0a, 0x48, 0x48, 0xa8, 0x22, 0x54, 0x44, 0x6a, 0x2b, 0xe4, 0x0a,
	0xde, 0xf7, 0xce, 0x73, 0x8e, 0xd5, 0xb3, 0x7d, 0x78, 0xf7, 0x48, 0xf2, 0xc6, 0x1b, 0x5f, 0x00,
	0x89, 0x27, 0x3e, 0x09, 0x5f, 0x0e, 0xcd, 0xec, 0xae, 0xcf, 0x36, 0xe9, 0x29, 0x6f, 0xfb, 0xfb,
	0xcd, 0xcc, 0xce, 0xcc, 0xce, 0x1f, 0x1b, 0xc6, 0xb9, 0xd4, 0xcb, 0x2b, 0x79, 0xba, 0xa9, 0x4a,
	0x5d, 0x0a, 0xdf, 0xa0, 0xe8, 0x57, 0x38, 0xaa, 0x50, 0xa1, 0xfe, 0x59, 0x2a, 0x15, 0xe3, 0x6f,
	0x5b, 0x54, 0x5a, 0x3c, 0x04, 0x0f, 0x73, 0x99, 0xad, 0xc3, 0xde, 0xbc, 0x77, 0x32, 0x8a, 0x0d,
	0x10, 0x21, 0x04, 0x05, 0x5e, 0x93, 0x5e, 0xd8, 0x67, 0xde, 0x41, 0x21, 0x60, 0x78, 0x25, 0xd5,
	0x55, 0x38, 0x60, 0x9a, 0xcf, 0xd1, 0x09, 0x1c, 0x29, 0x2c, 0x92, 0x1f, 0xc9, 0x74, 0xef, 0xbd,
	0xd1, 0xdf, 0x3d, 0x98, 0x2c, 0x2b, 0x94, 0x1a, 0x9d, 0xde, 0x0c, 0x0e, 0xb6, 0x0a, 0xab, 0xd7,
	0x32, 0x47, 0xab, 0x5a, 0x63, 0xf1, 0x21, 0x8c, 0x56, 0x59, 0xa5, 0x34, 0x0b, 0x4d, 0x1c, 0x3b,
	0x82, 0x2c, 0xd7, 0xd2, 0x0a, 0x4d, 0x34, 0x35, 0x26, 0xd9, 0x46, 0x2a, 0x75, 0x5d, 0x56, 0x49,
	0x38, 0x34, 0x32, 0x87, 0x77, 0x91, 0x79, 0xcd, 0xc8, 0xbe, 0x85, 0xc9, 0xef, 0x58, 0x65, 0xab,
	0xdb, 0xfd, 0x0f, 0xe3, 0xd2, 0xef, 0x37, 0xd2, 0xff, 0xb7, 0x07, 0x93, 0x45, 0x55, 0x5e, 0xab,
	0x66, 0x52, 0xeb, 0x72, 0x29, 0x75, 0x56, 0x16, 0x2e, 0x29, 0x87, 0xc5, 0x31, 0xf8, 0x79, 0x56,
	0x3c, 0x4f, 0x4d, 0x46, 0x5e, 0x6c, 0x11, 0xf1, 0xaf, 0xe4, 0x0d, 0xf1, 0x03, 0xc3, 0x1b, 0x44,
	0x1e, 0xb5, 0x4c, 0x55, 0x38, 0x9c, 0x0f, 0xc8, 0x23, 0x9d, 0xc5, 0x27, 0x30, 0xc9, 0xb3, 0xe2,
	0x85, 0xcc, 0x31, 0x96, 0x3a, 0x2b, 0x52, 0x4e, 0xc5, 0x8b, 0xdb, 0x24, 0x69, 0xbd, 0x92, 0x37,
	0x0d, 0x2d, 0xdf, 0x68, 0xb5, 0xc8, 0xe8, 0x07, 0x38, 0x5c, 0x67, 0x6f, 0x31, 0x79, 0xa3, 0xa5,
	0xde, 0x2a, 0x7a, 0xf3, 0x45, 0xa9, 0xaf, 0x5e, 0x12, 0xc5, 0xb1, 0x1f, 0xc4, 0x3b, 0x82, 0x82,
	0xbc, 0x34, 0xa2, 0x3e, 0x8b, 0x2c, 0x8a, 0xfe, 0xec, 0x41, 0xa0, 0x51, 0xb1, 0xdb, 0x10, 0x82,
	0x1c, 0x95, 0x92, 0xa9, 0x2b, 0xa8, 0x83, 0x94, 0x8a, 0xac, 0xd2, 0xaf, 0xdc, 0xe3, 0xd1, 0xd9,
	0x72, 0x67, 0xae, 0x9f, 0xe8, 0x6c, 0xb9, 0x27, 0xb6, 0x72, 0x7c, 0xb6, 0xdc, 0x53, 0x5b, 0x34,
	0x3e, 0x5b, 0xee, 0x9c, 0xf3, 0x32, 0xdc, 0x79, 0xf4, 0x1d, 0x8c, 0xb3, 0x5c, 0xa6, 0x75, 0x29,
	0x8e, 0xc1, 0xa7, 0x7e, 0xba, 0xbc, 0xe0, 0x60, 0x06, 0xb1, 0x45, 0x54, 0xde, 0x65, 0xb9, 0x2d,
	0xb4, 0xad, 0x82, 0x01, 0xd1, 0xd7, 0x30, 0x62, 0xeb, 0x0b, 0xa9, 0x25, 0xa9, 0x30, 0x60, 0xcb,
	0x71, 0x6c, 0x00, 0xb3, 0x45, 0x82, 0x37, 0xce, 0x90, 0x41, 0x14, 0x50, 0xb7, 0x6c, 0xf4, 0x6d,
	0xf4, 0x02, 0xc6, 0xeb, 0x32, 0xcd, 0x8a, 0xfb, 0xf4, 0x77, 0xb3, 0x4b, 0xfb, 0xed, 0x2e, 0x8d,
	0xfe, 0x1a, 0xc0, 0xf0, 0x17, 0x85, 0x95, 0x98, 0x42, 0x3f, 0x33, 0x95, 0xf0, 0xe2, 0x7e, 0x96,
	0xb4, 0x2e, 0xec, 0xef, 0x1b, 0x98, 0xc1, 0xbe, 0x81, 0x19, 0xee, 0x19, 0x18, 0xef, 0x5d, 0x03,
	0xe3, 0x37, 0x27, 0xe1, 0x18, 0xfc, 0x14, 0x8b, 0x04, 0xab, 0x30, 0x60, 0xda, 0x22, 0xf1, 0x11,
	0xc0, 0xa6, 0xc2, 0x15, 0x56, 0x58, 0x2c, 0x31, 0x3c, 0x60, 0x59, 0x83, 0x11, 0x47, 0x30, 0x58,
	0x64, 0x65, 0x38, 0x62, 0x01, 0x1d, 0xeb, 0x99, 0x82, 0xdd, 0x4c, 0xd5, 0x5d, 0x7f, 0xd8, 0xe8,
	0xfa, 0x39, 0x1c, 0x2a, 0xc4, 0xe2, 0xa7, 0x4c, 0xe9, 0xb2, 0xba, 0x0d, 0xc7, 0xf3, 0xc1, 0x89,
	0x17, 0x37, 0x29, 0xf2, 0xbd, 0xda, 0xb5, 0xfb, 0x84, 0xdf, 0xac, 0xc1, 0x90, 0x6f, 0xaa, 0xe7,
	0x94, 0x05, 0x74, 0x6c, 0x4d, 0xea, 0x83, 0xce, 0xa4, 0x52, 0x0c, 0xa8, 0x74, 0x78, 0x64, 0xe2,
	0xa2, 0x73, 0x34, 0x77, 0xed, 0xd4, 0x69, 0x2c, 0xcf, 0x35, 0x56, 0xf4, 0x3d, 0x04, 0x6f, 0x50,
	0x29, 0x3b, 0xea, 0x77, 0xa9, 0x50, 0x99, 0x94, 0x51, 0xb9, 0xbc, 0x70, 0x7b, 0xad, 0x26, 0xa2,
	0x8f, 0xc1, 0x8b, 0x71, 0xb3, 0xbe, 0x7d, 0xf7, 0x20, 0x9d, 0xfd, 0xd1, 0x83, 0xe9, 0xaa, 0xac,
	0xd2, 0x92, 0x57, 0x39, 0x17, 0xe9, 0x29, 0xdd, 0x69, 0x77, 0xb0, 0x08, 0x4f, 0xed, 0xfe, 0xef,
	0xae, 0xe5, 0xd9, 0xc4, 0x49, 0x8c, 0x8b, 0x6f, 0x60, 0x52, 0x7f, 0x11, 0xf8, 0x9a, 0xda, 0xb2,
	0xfb, 0xa1, 0xe8, 0x58, 0x9e, 0x95, 0x6e, 0x91, 0x3f, 0x5f, 0xf2, 0xe8, 0x88, 0x53, 0xf0, 0x0d,
	0x21, 0x3e, 0x70, 0x9a, 0xad, 0x4d, 0xdf, 0x75, 0x7d, 0x0a, 0xbe, 0x59, 0xb8, 0x3b, 0xfd, 0xd6,
	0x02, 0xee, 0x3a, 0xfc, 0x67, 0x08, 0x81, 0xf3, 0xf5, 0x19, 0x04, 0x29, 0x6a, 0x33, 0x1e, 0x4e,
	0xcb, 0xbc, 0xed, 0x6c, 0xec, 0x30, 0x4b, 0x9f, 0xc1, 0x28, 0x45, 0x7d, 0x49, 0x83, 0xab, 0xc4,
	0x43, 0x27, 0x6a, 0x2e, 0x88, 0xd9, 0x7b, 0x2d, 0x96, 0x06, 0xff, 0x71, 0x4f, 0x7c, 0x0e, 0xb0,
	0xdd, 0x24, 0x52, 0x23, 0xdf, 0xd2, 0xba, 0xb3, 0x9b, 0xc7, 0x33, 0x98, 0x9a, 0xb8, 0x5f, 0xe3,
	0xb5, 0x79, 0xfd, 0x7b, 0xe5, 0x23, 0x1e, 0xc1, 0xa1, 0x71, 0xc1, 0xd1, 0x89, 0xff, 0x87, 0xd1,
	0x35, 0xf8, 0x12, 0x86, 0x2b, 0xc4, 0x64, 0x77, 0x7d, 0xeb, 0x9b, 0xd3, 0x4e, 0xfc, 0x71, 0x4f,
	0x9c, 0xc1, 0x88, 0x17, 0x11, 0x67, 0x50, 0xa7, 0xde, 0xdc, 0x4d, 0xb3, 0x07, 0x8e, 0x75, 0x0d,
	0x7b, 0x0e, 0xd3, 0x14, 0xf5, 0xcb, 0xc6, 0xe7, 0xa0, 0xfb, 0xbc, 0xef, 0xd7, 0x17, 0x35, 0x94,
	0x1e, 0xc1, 0x01, 0xc1, 0x3b, 0xeb, 0x71, 0xa7, 0xc1, 0x17, 0x30, 0x5a, 0xac, 0xcb, 0xe5, 0xdb,
	0x3b, 0x2d, 0x3a, 0x69, 0x7f, 0x6a, 0xa6, 0x50, 0xd4, 0xc1, 0xda, 0xef, 0x4c, 0x47, 0x6f, 0xe1,
	0xf3, 0xbf, 0xce, 0x93, 0xff, 0x02, 0x00, 0x00, 0xff, 0xff, 0xd4, 0x9a, 0xcf, 0x19, 0xfb, 0x08,
	0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ForgotPasswordClient is the client API for ForgotPassword service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ForgotPasswordClient interface {
	SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*Reply, error)
	ResetPassword(ctx context.Context, in *ResetPassRequest, opts ...grpc.CallOption) (*Reply, error)
}

type forgotPasswordClient struct {
	cc *grpc.ClientConn
}

func NewForgotPasswordClient(cc *grpc.ClientConn) ForgotPasswordClient {
	return &forgotPasswordClient{cc}
}

func (c *forgotPasswordClient) SendEmail(ctx context.Context, in *SendEmailRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/matcha.forgotPassword/sendEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *forgotPasswordClient) ResetPassword(ctx context.Context, in *ResetPassRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/matcha.forgotPassword/resetPassword", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ForgotPasswordServer is the server API for ForgotPassword service.
type ForgotPasswordServer interface {
	SendEmail(context.Context, *SendEmailRequest) (*Reply, error)
	ResetPassword(context.Context, *ResetPassRequest) (*Reply, error)
}

// UnimplementedForgotPasswordServer can be embedded to have forward compatible implementations.
type UnimplementedForgotPasswordServer struct {
}

func (*UnimplementedForgotPasswordServer) SendEmail(ctx context.Context, req *SendEmailRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method SendEmail not implemented")
}
func (*UnimplementedForgotPasswordServer) ResetPassword(ctx context.Context, req *ResetPassRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ResetPassword not implemented")
}

func RegisterForgotPasswordServer(s *grpc.Server, srv ForgotPasswordServer) {
	s.RegisterService(&_ForgotPassword_serviceDesc, srv)
}

func _ForgotPassword_SendEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SendEmailRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ForgotPasswordServer).SendEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matcha.forgotPassword/SendEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ForgotPasswordServer).SendEmail(ctx, req.(*SendEmailRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ForgotPassword_ResetPassword_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ResetPassRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ForgotPasswordServer).ResetPassword(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matcha.forgotPassword/ResetPassword",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ForgotPasswordServer).ResetPassword(ctx, req.(*ResetPassRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ForgotPassword_serviceDesc = grpc.ServiceDesc{
	ServiceName: "matcha.forgotPassword",
	HandlerType: (*ForgotPasswordServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "sendEmail",
			Handler:    _ForgotPassword_SendEmail_Handler,
		},
		{
			MethodName: "resetPassword",
			Handler:    _ForgotPassword_ResetPassword_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "matcha.proto",
}

// CreateAccountClient is the client API for CreateAccount service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CreateAccountClient interface {
	Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*Reply, error)
	Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*Reply, error)
}

type createAccountClient struct {
	cc *grpc.ClientConn
}

func NewCreateAccountClient(cc *grpc.ClientConn) CreateAccountClient {
	return &createAccountClient{cc}
}

func (c *createAccountClient) Create(ctx context.Context, in *CreateRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/matcha.createAccount/create", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *createAccountClient) Verify(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/matcha.createAccount/verify", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CreateAccountServer is the server API for CreateAccount service.
type CreateAccountServer interface {
	Create(context.Context, *CreateRequest) (*Reply, error)
	Verify(context.Context, *VerifyRequest) (*Reply, error)
}

// UnimplementedCreateAccountServer can be embedded to have forward compatible implementations.
type UnimplementedCreateAccountServer struct {
}

func (*UnimplementedCreateAccountServer) Create(ctx context.Context, req *CreateRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Create not implemented")
}
func (*UnimplementedCreateAccountServer) Verify(ctx context.Context, req *VerifyRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Verify not implemented")
}

func RegisterCreateAccountServer(s *grpc.Server, srv CreateAccountServer) {
	s.RegisterService(&_CreateAccount_serviceDesc, srv)
}

func _CreateAccount_Create_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreateAccountServer).Create(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matcha.createAccount/Create",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreateAccountServer).Create(ctx, req.(*CreateRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CreateAccount_Verify_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CreateAccountServer).Verify(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matcha.createAccount/Verify",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CreateAccountServer).Verify(ctx, req.(*VerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CreateAccount_serviceDesc = grpc.ServiceDesc{
	ServiceName: "matcha.createAccount",
	HandlerType: (*CreateAccountServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "create",
			Handler:    _CreateAccount_Create_Handler,
		},
		{
			MethodName: "verify",
			Handler:    _CreateAccount_Verify_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "matcha.proto",
}

// AccountClient is the client API for Account service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AccountClient interface {
	GetUser(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*User, error)
	GetImages(ctx context.Context, in *ImageRequest, opts ...grpc.CallOption) (Account_GetImagesClient, error)
	UpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Reply, error)
	VerifyNewEmail(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*Reply, error)
	UpdateImage(ctx context.Context, in *ImageData, opts ...grpc.CallOption) (*Reply, error)
	Feed(ctx context.Context, in *BrowseRequest, opts ...grpc.CallOption) (Account_FeedClient, error)
	LoginUser(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Session, error)
	GetLikedStatus(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*LikedStatus, error)
	LikeUser(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*LikedStatus, error)
	BlockUser(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*Reply, error)
	Test(ctx context.Context, in *Testing, opts ...grpc.CallOption) (*Reply, error)
}

type accountClient struct {
	cc *grpc.ClientConn
}

func NewAccountClient(cc *grpc.ClientConn) AccountClient {
	return &accountClient{cc}
}

func (c *accountClient) GetUser(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*User, error) {
	out := new(User)
	err := c.cc.Invoke(ctx, "/matcha.Account/getUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) GetImages(ctx context.Context, in *ImageRequest, opts ...grpc.CallOption) (Account_GetImagesClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Account_serviceDesc.Streams[0], "/matcha.Account/getImages", opts...)
	if err != nil {
		return nil, err
	}
	x := &accountGetImagesClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Account_GetImagesClient interface {
	Recv() (*ImageData, error)
	grpc.ClientStream
}

type accountGetImagesClient struct {
	grpc.ClientStream
}

func (x *accountGetImagesClient) Recv() (*ImageData, error) {
	m := new(ImageData)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *accountClient) UpdateUser(ctx context.Context, in *User, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/matcha.Account/updateUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) VerifyNewEmail(ctx context.Context, in *VerifyRequest, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/matcha.Account/verifyNewEmail", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) UpdateImage(ctx context.Context, in *ImageData, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/matcha.Account/updateImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Feed(ctx context.Context, in *BrowseRequest, opts ...grpc.CallOption) (Account_FeedClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Account_serviceDesc.Streams[1], "/matcha.Account/feed", opts...)
	if err != nil {
		return nil, err
	}
	x := &accountFeedClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Account_FeedClient interface {
	Recv() (*User, error)
	grpc.ClientStream
}

type accountFeedClient struct {
	grpc.ClientStream
}

func (x *accountFeedClient) Recv() (*User, error) {
	m := new(User)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *accountClient) LoginUser(ctx context.Context, in *LoginRequest, opts ...grpc.CallOption) (*Session, error) {
	out := new(Session)
	err := c.cc.Invoke(ctx, "/matcha.Account/loginUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) GetLikedStatus(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*LikedStatus, error) {
	out := new(LikedStatus)
	err := c.cc.Invoke(ctx, "/matcha.Account/getLikedStatus", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) LikeUser(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*LikedStatus, error) {
	out := new(LikedStatus)
	err := c.cc.Invoke(ctx, "/matcha.Account/likeUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) BlockUser(ctx context.Context, in *UserID, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/matcha.Account/blockUser", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *accountClient) Test(ctx context.Context, in *Testing, opts ...grpc.CallOption) (*Reply, error) {
	out := new(Reply)
	err := c.cc.Invoke(ctx, "/matcha.Account/test", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// AccountServer is the server API for Account service.
type AccountServer interface {
	GetUser(context.Context, *UserID) (*User, error)
	GetImages(*ImageRequest, Account_GetImagesServer) error
	UpdateUser(context.Context, *User) (*Reply, error)
	VerifyNewEmail(context.Context, *VerifyRequest) (*Reply, error)
	UpdateImage(context.Context, *ImageData) (*Reply, error)
	Feed(*BrowseRequest, Account_FeedServer) error
	LoginUser(context.Context, *LoginRequest) (*Session, error)
	GetLikedStatus(context.Context, *UserID) (*LikedStatus, error)
	LikeUser(context.Context, *UserID) (*LikedStatus, error)
	BlockUser(context.Context, *UserID) (*Reply, error)
	Test(context.Context, *Testing) (*Reply, error)
}

// UnimplementedAccountServer can be embedded to have forward compatible implementations.
type UnimplementedAccountServer struct {
}

func (*UnimplementedAccountServer) GetUser(ctx context.Context, req *UserID) (*User, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetUser not implemented")
}
func (*UnimplementedAccountServer) GetImages(req *ImageRequest, srv Account_GetImagesServer) error {
	return status.Errorf(codes.Unimplemented, "method GetImages not implemented")
}
func (*UnimplementedAccountServer) UpdateUser(ctx context.Context, req *User) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateUser not implemented")
}
func (*UnimplementedAccountServer) VerifyNewEmail(ctx context.Context, req *VerifyRequest) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method VerifyNewEmail not implemented")
}
func (*UnimplementedAccountServer) UpdateImage(ctx context.Context, req *ImageData) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateImage not implemented")
}
func (*UnimplementedAccountServer) Feed(req *BrowseRequest, srv Account_FeedServer) error {
	return status.Errorf(codes.Unimplemented, "method Feed not implemented")
}
func (*UnimplementedAccountServer) LoginUser(ctx context.Context, req *LoginRequest) (*Session, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LoginUser not implemented")
}
func (*UnimplementedAccountServer) GetLikedStatus(ctx context.Context, req *UserID) (*LikedStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetLikedStatus not implemented")
}
func (*UnimplementedAccountServer) LikeUser(ctx context.Context, req *UserID) (*LikedStatus, error) {
	return nil, status.Errorf(codes.Unimplemented, "method LikeUser not implemented")
}
func (*UnimplementedAccountServer) BlockUser(ctx context.Context, req *UserID) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method BlockUser not implemented")
}
func (*UnimplementedAccountServer) Test(ctx context.Context, req *Testing) (*Reply, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Test not implemented")
}

func RegisterAccountServer(s *grpc.Server, srv AccountServer) {
	s.RegisterService(&_Account_serviceDesc, srv)
}

func _Account_GetUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).GetUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matcha.Account/GetUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).GetUser(ctx, req.(*UserID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_GetImages_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(ImageRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AccountServer).GetImages(m, &accountGetImagesServer{stream})
}

type Account_GetImagesServer interface {
	Send(*ImageData) error
	grpc.ServerStream
}

type accountGetImagesServer struct {
	grpc.ServerStream
}

func (x *accountGetImagesServer) Send(m *ImageData) error {
	return x.ServerStream.SendMsg(m)
}

func _Account_UpdateUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(User)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).UpdateUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matcha.Account/UpdateUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).UpdateUser(ctx, req.(*User))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_VerifyNewEmail_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(VerifyRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).VerifyNewEmail(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matcha.Account/VerifyNewEmail",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).VerifyNewEmail(ctx, req.(*VerifyRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_UpdateImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ImageData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).UpdateImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matcha.Account/UpdateImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).UpdateImage(ctx, req.(*ImageData))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_Feed_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(BrowseRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AccountServer).Feed(m, &accountFeedServer{stream})
}

type Account_FeedServer interface {
	Send(*User) error
	grpc.ServerStream
}

type accountFeedServer struct {
	grpc.ServerStream
}

func (x *accountFeedServer) Send(m *User) error {
	return x.ServerStream.SendMsg(m)
}

func _Account_LoginUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(LoginRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).LoginUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matcha.Account/LoginUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).LoginUser(ctx, req.(*LoginRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_GetLikedStatus_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).GetLikedStatus(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matcha.Account/GetLikedStatus",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).GetLikedStatus(ctx, req.(*UserID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_LikeUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).LikeUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matcha.Account/LikeUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).LikeUser(ctx, req.(*UserID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_BlockUser_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserID)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).BlockUser(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matcha.Account/BlockUser",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).BlockUser(ctx, req.(*UserID))
	}
	return interceptor(ctx, in, info, handler)
}

func _Account_Test_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Testing)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(AccountServer).Test(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/matcha.Account/Test",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(AccountServer).Test(ctx, req.(*Testing))
	}
	return interceptor(ctx, in, info, handler)
}

var _Account_serviceDesc = grpc.ServiceDesc{
	ServiceName: "matcha.Account",
	HandlerType: (*AccountServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "getUser",
			Handler:    _Account_GetUser_Handler,
		},
		{
			MethodName: "updateUser",
			Handler:    _Account_UpdateUser_Handler,
		},
		{
			MethodName: "verifyNewEmail",
			Handler:    _Account_VerifyNewEmail_Handler,
		},
		{
			MethodName: "updateImage",
			Handler:    _Account_UpdateImage_Handler,
		},
		{
			MethodName: "loginUser",
			Handler:    _Account_LoginUser_Handler,
		},
		{
			MethodName: "getLikedStatus",
			Handler:    _Account_GetLikedStatus_Handler,
		},
		{
			MethodName: "likeUser",
			Handler:    _Account_LikeUser_Handler,
		},
		{
			MethodName: "blockUser",
			Handler:    _Account_BlockUser_Handler,
		},
		{
			MethodName: "test",
			Handler:    _Account_Test_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "getImages",
			Handler:       _Account_GetImages_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "feed",
			Handler:       _Account_Feed_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "matcha.proto",
}
